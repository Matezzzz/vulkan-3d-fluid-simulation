#version 450

layout(local_size_x = 10, local_size_y = 10, local_size_z = 1) in;



layout(set = 0, binding = 0) uniform simulation_params_buffer{
    layout(offset = 24) int cell_type_water;
    layout(offset = 28) int cell_type_solid;
    layout(offset = 32) float time_delta;
    layout(offset = 40) float cell_width;
    layout(offset = 44) float fluid_density;
};
layout(set = 0, binding = 1, r8ui)    uniform restrict readonly uimage3D cell_types;
layout(set = 0, binding = 2, r32f)    uniform restrict readonly image3D pressures;
layout(set = 0, binding = 3, rgba32f) uniform restrict image3D velocities;




uint cellAt(ivec3 i){
    return imageLoad(cell_types, i).x;
}
float pressureAt(ivec3 i){
    return imageLoad(pressures, i).x;
}
bool isWater(uint a){
    return (a == cell_type_water);
}
bool isSolid(uint a){
    return (a == cell_type_solid);
}


void main(){
    ivec3 i = ivec3(gl_GlobalInvocationID);

    vec3 v = imageLoad(velocities, i).xyz;
    vec3 dv = vec3(0, 0, 0);

    uint local_type = cellAt(i);
    float local_pressure = imageLoad(pressures, i).x;

    ivec3 cur_i;
    uint cur_type;

    cur_i = i - ivec3(1, 0, 0);
    cur_type = cellAt(cur_i);
    if (i.x != 0 && (isWater(local_type) || isWater(cur_type))){
        if (!isSolid(local_type) && !isSolid(cur_type)){
            dv.x = local_pressure - pressureAt(cur_i);
        }
    }
    cur_i = i - ivec3(0, 1, 0);
    cur_type = cellAt(cur_i);
    if (i.y != 0 && (isWater(local_type) || isWater(cur_type))){
        if (!isSolid(local_type) && !isSolid(cur_type)){
            dv.y = local_pressure - pressureAt(cur_i);
        }
    }
    cur_i = i - ivec3(0, 0, 1);
    cur_type = cellAt(cur_i);
    if (i.z != 0 && (isWater(local_type) || isWater(cur_type))){
        if (!isSolid(local_type) && !isSolid(cur_type)){
            dv.z = local_pressure - pressureAt(cur_i);
        }
    }
    dv = time_delta / fluid_density / cell_width * dv;
    imageStore(velocities, i, vec4(v - dv, 0.0));
}