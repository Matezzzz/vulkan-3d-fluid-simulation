#version 450

layout(local_size_x = 1000) in;


const int PARTICLE_BUFFER_SIZE = 1000000;

layout(set = 0, binding = 0) uniform simulation_params_buffer{
    layout(offset = 48) uvec2 particle_compute_size;
    layout(offset = 64) uvec3 particle_spawn_cube_resolution;
    layout(offset = 80) vec3 particle_spawn_cube_offset;
    layout(offset = 96) vec3 particle_spawn_cube_size;
};
layout(set = 0, binding = 1) buffer restrict writeonly particles{
    vec4 positions[PARTICLE_BUFFER_SIZE];
};

ivec3 getPos(uint particle_i){
    return ivec3(particle_i % particle_spawn_cube_resolution.x, particle_i % (particle_spawn_cube_resolution.x * particle_spawn_cube_resolution.y) / particle_spawn_cube_resolution.x, particle_i / particle_spawn_cube_resolution.x / particle_spawn_cube_resolution.y);
}

void main(){
    uint i = gl_GlobalInvocationID.x + particle_compute_size.x*gl_GlobalInvocationID.y;
    vec3 particle_pos_in_cube = getPos(i);
    if (particle_pos_in_cube.z < particle_spawn_cube_size.z){
        vec3 particle_pos = particle_spawn_cube_offset + particle_pos_in_cube / particle_spawn_cube_resolution * particle_spawn_cube_size;
        positions[i] = vec4(particle_pos, 1.0);
    }
}