#version 450

layout(local_size_x = 10, local_size_y = 10, local_size_z = 1) in;

layout(set = 0, binding = 0, r8ui)     uniform restrict readonly uimage3D cell_types;
layout(set = 0, binding = 1, rgba32f) uniform restrict image3D velocities;

const uint CELL_AIR = 1;
const uint CELL_WATER = 2;
const float time_delta = 0.01;
const float gravity = 10;


uint cellAt(ivec3 i){
    return imageLoad(cell_types, i).x;
}

bool isActive(uint type){
    return (type == CELL_WATER);
}


void main(){
    ivec3 i = ivec3(gl_GlobalInvocationID.xyz);

    vec3 force = vec3(0, 0, 0);

    if (i.y != 0){
        uint type1 = cellAt(i);
        uint type2 = cellAt(i - ivec3(0, 1, 0));
        if (isActive(type1) || isActive(type2)){
            force.y += gravity;
        }
    }
    if (i.x == 10 && i.y == 18 && i.z == 10 && (isActive(cellAt(i)) || isActive(cellAt(i - ivec3(0,1,0))))){
        force.y -= 4000;
    }
    /*if (i.x == 15 && i.y == 18 && i.z == 5 && (isActive(cellAt(i)) || isActive(cellAt(i - ivec3(0,1,0))))){
        force.y -= 4000;
    }
    if (i.x == 5 && i.y == 18 && i.z == 15 && (isActive(cellAt(i)) || isActive(cellAt(i - ivec3(0,1,0))))){
        force.y -= 4000;
    }
    if (i.x == 5 && i.y == 18 && i.z == 5 && (isActive(cellAt(i)) || isActive(cellAt(i - ivec3(0,1,0))))){
        force.y -= 4000;
    }*/
    if (force.x != 0 || force.y != 0 || force.z != 0){
        imageStore(velocities, i, imageLoad(velocities, i) + vec4(time_delta*force, 0));
    }
}