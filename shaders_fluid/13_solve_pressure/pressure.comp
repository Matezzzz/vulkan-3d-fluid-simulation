#version 450

layout(local_size_x = 10, local_size_y = 10, local_size_z = 1) in;

layout(set = 0, binding = 0) uniform simulation_params_buffer{
    layout(offset = 24) int cell_type_water;
    layout(offset = 28) int cell_type_solid;
    layout(offset = 32) float time_delta;
    layout(offset = 36) float pressure_air;
    layout(offset = 40) float cell_width;
    layout(offset = 44) float fluid_density;
};
layout(set = 0, binding = 1, r8ui) uniform restrict readonly uimage3D cell_types;
layout(set = 0, binding = 2, r32f) uniform restrict readonly image3D divergences;
layout(set = 0, binding = 3, r32f) uniform restrict image3D pressures_1;
layout(set = 0, binding = 4, r32f) uniform restrict image3D pressures_2;





layout(push_constant) uniform constants{
    uint is_even_iteration;
};



#define search_neighbor(tex_in, move)\
t = imageLoad(cell_types, i + move).x;\
if (t != cell_type_solid){\
    if (t == cell_type_water){\
        s -= imageLoad(tex_in, i + move).x;\
    }else{\
        s -= pressure_air;\
    }\
    aii++;\
}

#define computePressure(tex_in, tex_out)\
int aii = 0;\
float s = imageLoad(divergences, i).x * fluid_density * cell_width / time_delta;\
uint t;\
search_neighbor(tex_in, ivec3(1, 0, 0))\
search_neighbor(tex_in, ivec3(0, 1, 0))\
search_neighbor(tex_in, ivec3(0, 0, 1))\
search_neighbor(tex_in, ivec3(-1, 0, 0))\
search_neighbor(tex_in, ivec3(0, -1, 0))\
search_neighbor(tex_in, ivec3(0, 0, -1))\
imageStore(tex_out, i, vec4(-s / aii, 0, 0, 0));


void main(){
    ivec3 i = ivec3(gl_GlobalInvocationID.xyz);
    uint t = imageLoad(cell_types, i).x;
    if (t == cell_type_water){
        if (is_even_iteration == 1){
            computePressure(pressures_1, pressures_2)
        }else{
            computePressure(pressures_2, pressures_1)
        }
    }
}