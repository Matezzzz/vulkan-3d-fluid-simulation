#version 450


/**
 * float_densities.comp
 *  - Convert densities (or inertias in this case) into their floating point representation: -1.f if equal to zero, or a / k if not. a is density value, k is a shared constant
 */


layout(local_size_x = 5, local_size_y = 5, local_size_z = 5) in;


layout(set = 0, binding = 0) uniform simulation_params_buffer{
    layout(offset = 144) float dens_division_coefficient;       //constant, by which non-zero densities are divided
};
layout(set = 0, binding = 1, r32ui) uniform restrict readonly uimage3D particle_densities;
layout(set = 0, binding = 2, r32f) uniform restrict writeonly image3D float_densities;




void main(){
    ivec3 i = ivec3(gl_GlobalInvocationID.xyz);
    //save result = dens / dens_division_coefficient
    imageStore(float_densities, i, vec4(imageLoad(particle_densities, i).x / dens_division_coefficient, 0, 0, 0));
}