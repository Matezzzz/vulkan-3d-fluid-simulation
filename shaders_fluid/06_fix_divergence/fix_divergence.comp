#version 450

layout(local_size_x = 128, local_size_y = 8, local_size_z = 1) in;

layout(set = 0, binding = 0, r8ui)     uniform readonly restrict uimage3D cell_types;
layout(set = 0, binding = 1, r32f)    uniform restrict image3D pressures;
layout(set = 0, binding = 2, rgba32f) uniform restrict image3D velocities;


const int CELL_WATER = 2;

const float fluid_density = 1;
const float time_delta = 0.01;
const float cell_width = 1;

void main(){
    ivec3 i = ivec3(gl_GlobalInvocationID);
    if (imageLoad(cell_types, i).x == CELL_WATER){
        vec3 v = imageLoad(velocities, i).xyz;
        v -= time_delta / fluid_density / cell_width * vec3(
            imageLoad(pressures, i + ivec3(1, 0, 0)).x - imageLoad(pressures, i - ivec3(1, 0, 0)).x,
            imageLoad(pressures, i + ivec3(0, 1, 0)).x - imageLoad(pressures, i - ivec3(0, 1, 0)).x,
            imageLoad(pressures, i + ivec3(0, 0, 1)).x - imageLoad(pressures, i - ivec3(0, 0, 1)).x
        );
    }
}