#version 450
#extension GL_EXT_samplerless_texture_functions : require

layout(local_size_x = 128, local_size_y = 8, local_size_z = 1) in;

layout(set = 0, binding = 0, r8i)     uniform restrict readonly iimage3D cell_types;
layout(set = 0, binding = 1, rgba32f) uniform restrict image3D velocities;

const int CELL_SOLID = 2;

void main(){
    ivec3 i = ivec3(gl_GlobalInvocationID.xyz);
    vec4 v = imageLoad(velocities, i);

    if (imageLoad(cell_types, i).x == CELL_SOLID){
        if (imageLoad(cell_types, i + ivec3(1, 0, 0)).x == CELL_SOLID && v.x < 0) v.x = 0;
        if (imageLoad(cell_types, i + ivec3(0, 1, 0)).x == CELL_SOLID && v.y < 0) v.y = 0;
        if (imageLoad(cell_types, i + ivec3(0, 0, 1)).x == CELL_SOLID && v.z < 0) v.z = 0;
    }else{
        if (imageLoad(cell_types, i + ivec3(1, 0, 0)).x == CELL_SOLID && v.x > 0) v.x = 0;
        if (imageLoad(cell_types, i + ivec3(0, 1, 0)).x == CELL_SOLID && v.y > 0) v.y = 0;
        if (imageLoad(cell_types, i + ivec3(0, 0, 1)).x == CELL_SOLID && v.z > 0) v.z = 0;
    }
    imageStore(velocities, i, v);
}