#version 450

layout(local_size_x = 128, local_size_y = 8, local_size_z = 1) in;

layout(set = 0, binding = 0, r8ui)     uniform restrict readonly uimage3D cell_types;
layout(set = 0, binding = 1, rgba32f) uniform restrict readonly image3D velocities;
layout(set = 0, binding = 2, r32f)    uniform restrict writeonly image3D divergences;


void main(){
    ivec3 i = ivec3(gl_GlobalInvocationID.xyz);
    vec3 v = imageLoad(velocities, i).xyz;

    float div = -v.x - v.y - v.z+
                imageLoad(velocities, i + ivec3(1, 0, 0)).x +
                imageLoad(velocities, i + ivec3(0, 1, 0)).y + 
                imageLoad(velocities, i + ivec3(0, 0, 1)).z;
    imageStore(divergences, i, vec4(div, 0, 0, 0));
}