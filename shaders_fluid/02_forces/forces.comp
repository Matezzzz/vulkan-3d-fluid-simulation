#version 450

layout(local_size_x = 10, local_size_y = 10, local_size_z = 1) in;

layout(set = 0, binding = 0, r8ui)     uniform restrict readonly uimage3D cell_types;
layout(set = 0, binding = 1, rgba32f) uniform restrict image3D velocities;

const uint CELL_AIR = 1;
const uint CELL_WATER = 2;
const float time_delta = 0.01;
const float gravity = 10;


uint cellAt(ivec3 i){
    return imageLoad(cell_types, i).x;
}
//if air cells are considered active as well, can create interesting forces that swirl the fluid around
bool isActive(uint type){
    return (type == CELL_WATER);
}


void main(){
    ivec3 i = ivec3(gl_GlobalInvocationID.xyz);
    if (i.y != 0){
        uint type1 = cellAt(i);
        uint type2 = cellAt(i - ivec3(0, 1, 0));
        if (isActive(type1) || isActive(type2)){
            imageStore(velocities, i, imageLoad(velocities, i) + time_delta*vec4(0, gravity, 0, 0));
        }
    }
}