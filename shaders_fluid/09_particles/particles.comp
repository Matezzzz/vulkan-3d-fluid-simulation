#version 450

layout(local_size_x = 256, local_size_y = 1) in;

layout(set = 0, binding = 0) uniform sampler3D velocities;
layout(set = 0, binding = 1, rgba32f) uniform restrict image2D particles;


const float time_delta = 0.01;

vec3 getVelocityAt(vec3 pos){
    return vec3(
        texture(velocities, pos - vec3(0, 0.5, 0.5)).x,
        texture(velocities, pos - vec3(0.5, 0, 0.5)).y,
        texture(velocities, pos - vec3(0.5, 0.5, 0)).z
    );
}



void main(){
    ivec2 i = ivec2(gl_GlobalInvocationID.xy);
    vec4 pos = imageLoad(particles, i);
    if (pos.w == 1.0){
        vec3 v = getVelocityAt(pos.xyz);
        vec3 result_pos = pos.xyz + v*time_delta;
        imageStore(particles, i, vec4(result_pos, 1.0));
    }
} 