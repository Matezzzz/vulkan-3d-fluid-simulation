#version 450

layout(local_size_x = 256) in;

layout(set = 0, binding = 0) uniform simulation_params_buffer{
    layout(offset = 0) uvec3 fluid_size;
    layout(offset = 116) int detailed_resolution;
};
layout(set = 0, binding = 1) buffer restrict readonly particles{
    vec4 particle_positions[65536];
};
layout(set = 0, binding = 2) buffer restrict coherent particle_densities{
    int particle_dens[512000];
};



uint getIndex(ivec3 pos){
    return pos.x + (pos.y + pos.z * fluid_size.y * detailed_resolution) * fluid_size.x * detailed_resolution;
}

void main(){
    int i = int(gl_GlobalInvocationID.x);
    vec4 pos = particle_positions[i];
    if (pos.w == 1.0){
        atomicAdd(particle_dens[getIndex(ivec3(pos.xyz * detailed_resolution))], 1);
    }
}