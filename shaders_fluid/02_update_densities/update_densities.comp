#version 450

layout(local_size_x = 1000) in;


const int FLUID_VOLUME = 64000;
const int PARTICLE_BUFFER_SIZE = 1000000;


layout(set = 0, binding = 0) uniform simulation_params_buffer{
    layout(offset = 0) uvec3 fluid_size;
};
layout(set = 0, binding = 1) buffer restrict readonly particles{
    vec4 particle_positions[PARTICLE_BUFFER_SIZE];
};
layout(set = 0, binding = 2) buffer restrict coherent particle_densities{
    int particle_dens[FLUID_VOLUME];
};



uint getIndex(uvec3 pos){
    return pos.x + (pos.y + pos.z * fluid_size.y) * fluid_size.x;
}

void main(){
    uint i = gl_GlobalInvocationID.x;
    vec4 pos = particle_positions[i];
    if (pos.w == 1.0){
        atomicAdd(particle_dens[getIndex(uvec3(pos.xyz))], 1);
    }
}