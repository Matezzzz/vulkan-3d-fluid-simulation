#version 450

layout(local_size_x = 10, local_size_y = 10, local_size_z = 1) in;


const int FLUID_VOLUME = 64000;


layout(set = 0, binding = 0) uniform simulation_params_buffer{
    layout(offset = 0) uvec3 fluid_size;
    layout(offset = 20) int cell_type_air;
    layout(offset = 24) int cell_type_water;
};
layout(set = 0, binding = 1) buffer restrict readonly particle_densities{
    int particle_dens[FLUID_VOLUME];
};
layout(set = 0, binding = 2, r8ui) uniform restrict writeonly uimage3D cell_types;




uint getIndex(uvec3 pos){
    return pos.x + (pos.y + pos.z * fluid_size.y) * fluid_size.x;
}


void main(){
    uvec3 i = gl_GlobalInvocationID.xyz;
    int type;
    if (particle_dens[getIndex(i)] > 0){
        type = cell_type_water;
    }else{
        type = cell_type_air;
    }
    imageStore(cell_types, ivec3(i), uvec4(type, 0, 0, 0));
}